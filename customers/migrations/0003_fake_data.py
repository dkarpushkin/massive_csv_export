# Generated by Django 2.2.1 on 2019-05-26 16:06

from django.db import migrations
from faker.providers.person.en import Provider as NameProvider


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0002_plpython_extension'),
    ]

    operations = [
        migrations.RunSQL('''
            CREATE OR REPLACE PROCEDURE generate_data(first_names VARCHAR(255)[], last_names VARCHAR(255)[])
            LANGUAGE plpython3u
            AS $$
                import random

                chunk_number, chunk_size = 250, 8000

                for _ in range(chunk_number):
                    values_list = ', '.join([
                        "('%s', '%s')" % (random.choice(first_names), random.choice(last_names))
                        for _ in range(chunk_size)
                    ])
                    customer_ids = plpy.execute(
                        "INSERT INTO customers_customer(first_name, last_name) VALUES %s RETURNING id, first_name, last_name" % values_list
                    )

                    values_list = ', '.join([
                        "('%s', '%s')" % ("%s.%s@gmail.com" % (customer['first_name'].lower(), customer['last_name'].lower()), customer['id'])
                        for customer in customer_ids
                    ])
                    plpy.execute(
                        "INSERT INTO customers_email(address, customer_id) VALUES %s" % values_list
                    )

                    values_list = ', '.join([
                        "('%s', '%s')" % ('+' + ''.join([str(random.randint(0, 9)) for _ in range(11)]), customer['id'])
                        for customer in customer_ids
                    ])
                    plpy.execute(
                        "INSERT INTO customers_phone(number, customer_id) VALUES %s" % values_list
                    )
            $$;
        ''', 'DROP PROCEDURE IF EXISTS generate_data(first_names VARCHAR(255)[], last_names VARCHAR(255)[]) CASCADE;'),
        migrations.RunSQL(f'''
            CALL generate_data(
                ARRAY[{', '.join([repr(name) for name in NameProvider.first_names if "'" not in name])}],
                ARRAY[{', '.join([repr(name) for name in NameProvider.last_names if "'" not in name])}]
            );
        ''', migrations.RunSQL.noop),
    ]
